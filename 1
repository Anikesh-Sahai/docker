docker run     -p 5000:5000            in28min/hello-world-python  :    0.0.1.RELEASE
                here we are              this part is repository        this represent
             mapping host port to            present on                     tags
                container port              hub.docker.com 


 for running diffrent images just change the host port and it will run


Commands

docker --version

docker run -p 5000:5000 in28min/hello-world-python:0.0.1.RELEASE
docker run -p 5000:5000 in28min/hello-world-java:0.0.1.RELEASE
docker run -p 5000:5000 in28min/hello-world-nodejs:0.0.1.RELEASE
in all the above command we are running the docker in attached mode that means docker is intact with the terminal and docker will show all the logs


docker run -d -p 5000:5000 in28min/hello-world-nodejs:0.0.1.RELEASE
docker run -d -p 5001:5000 in28min/hello-world-python:0.0.1.RELEASE
here we can run docker in detached mode -d is used for detached mode

docker logs 04e52ff9270f5810eefe1f77222852dc1461c22440d4ecd6228b5c38f09d838e
for checking the command we use above command with the container id

docker logs c2ba
we dont need to write full id we can write the starting substring and get the image

docker images
here we can know all the docker images present at our machine 

docker container ls
here we can know all the images running on our machine

docker container ls -a
here it shows all the containers that are even in the exited state

docker container stop f708b7ee1a8b
to stop an image we us e the above command

docker run -d -p 5001:8080 in28min/hello-world-rest-api:0.0.1.RELEASE
here we are running the rest api


docker pull mysql
here we are only pulling the repo to local for availability with latest tag as we are not specified the tag

docker search mysql
here we are searching the repo on docker hub

docker image history in28min/hello-world-java:0.0.1.RELEASE
getting the image history 

docker image history 100229ba687e
getting the image history using id

docker image inspect 100229ba687e
getting docker image details 

docker image remove mysql
removing the image from local

docker image remove in28min/hello-world-java:0.0.1.RELEASE
removing the image from local, getting errror while removing that means some container is running on that image

docker container rm 3e657ae9bd16
removing the container from local with id

docker container pause 832
pausing the container , it will not serve any request

docker container unpause 832
unpausing the container

docker container stop 832
stopping the container will stop the apllication which give time to stop application easly

docker container kill 832
it will container without giving time

docker container inspect ff521fa58db3
give info about container

docker container prune
removing all the stopped containers

docker system
gives info about all the containers

docker system df
gives info about all the containers and images

docker system info
gives info about all the containers and images

docker system prune -a
removing all the stopped containers and images

docker top 9009722eac4d
gives info about running process

docker stats 9009722eac4d
gives info about running process info about how muh cpu use what memory container using etc

docker container run -p 5000:5000 -d -m 512m in28min/hello-world-java:0.0.1.RELEASE
running the container with memory limit that is 512mb

docker container run -p 5000:5000 -d -m 512m --cpu-quota=50000  in28min/hello-world-java:0.0.1.RELEASE
running the container with cpu limit that is 50000(it is half cpu limit the total cpu limit is 100000)

docker system events
gives info about all the events
 
docker container stats 4faca1ea914e3e4587d1d790948ec6cb8fa34f26e900c12632fd64d4722fd59a
gives info about running process

docker stats 42f170966ce613d2a16d7404495af7b3295e01aeb9142e1fa1762bbdc581f502
gives info about running process

docker image tag in28min/hello-world-python:0.0.2.RELEASE sahaianikesh/hello-world-python:0.0.2.RELEASE
docker image rmi in28min/hello-world-python:0.0.2.RELEASE
for renaming the image
 
cd /in28Minutes/git/devops-master-class/projects/hello-world/hello-world-python 
docker build -t in28min/hello-world-python:0.0.2.RELEASE . 
building image using docker file
docker run -p 5000:5000 -d in28min/hello-world-python:0.0.2.RELEASE
docker history e66dc383f7a0
docker push in28min/hello-world-python:0.0.2.RELEASE
pushing on docker hub
 
cd ../hello-world-nodejs/
docker build -t in28min/hello-world-nodejs:0.0.2.RELEASE . 
docker container run -d -p 5000:5000 in28min/hello-world-nodejs:0.0.2.RELEASE
docker push in28min/hello-world-nodejs:0.0.2.RELEASE
 
cd ../hello-world-java/
docker build -t in28min/hello-world-java:0.0.2.RELEASE . 
docker run -d -p 5000:5000 in28min/hello-world-java:0.0.2.RELEASE
docker push in28min/hello-world-java:0.0.2.RELEASE
 
docker run -d -p 5001:5000 in28min/hello-world-nodejs:0.0.3.RELEASE ping google.com
 
 
docker run -d -p 8000:8000 --name=currency-exchange in28min/currency-exchange:0.0.1-RELEASE
docker run -d -p 8100:8100 --name=currency-conversion in28min/currency-conversion:0.0.1-RELEASE
 
docker network ls
docker network inspect bridge
 
docker run -d -p 8100:8100 --env CURRENCY_EXCHANGE_SERVICE_HOST=http://currency-exchange --name=currency-conversion --link currency-exchange in28min/currency-conversion:0.0.1-RELEASE
 
docker network create currency-network
docker container stop currency-exchange
docker container stop currency-conversion
docker run -d -p 8000:8000 --name=currency-exchange --network=currency-network in28min/currency-exchange:0.0.1-RELEASE
docker run -d -p 8100:8100 --env CURRENCY_EXCHANGE_SERVICE_HOST=http://currency-exchange --name=currency-conversion --network=currency-network in28min/currency-conversion:0.0.1-RELEASE
 
docker-compose --version
cd ../../microservices/
docker-compose up
docker-compose up -d
docker container ls
docker network ls
docker network inspect microservices_currency-compose-network
docker-compose down
docker container ls -a
docker system prune -a
docker-compose config
docker-compose images
docker-compose ps
docker-compose top
 
docker build -t in28min/hello-world-java:0.0.1.RELEASE .
docker push in28min/hello-world-java:0.0.1.RELEASE
 
docker build -t in28min/hello-world-python:0.0.1.RELEASE .
docker push in28min/hello-world-python:0.0.1.RELEASE
 
docker build -t in28min/hello-world-nodejs:0.0.1.RELEASE .
docker push in28min/hello-world-nodejs:0.0.1.RELEASE